{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Button",
          "declaration": {
            "name": "default",
            "module": "./button/React"
          }
        },
        {
          "kind": "js",
          "name": "Icon",
          "declaration": {
            "name": "default",
            "module": "./icon/React"
          }
        },
        {
          "kind": "js",
          "name": "Input",
          "declaration": {
            "name": "default",
            "module": "./input/React"
          }
        },
        {
          "kind": "js",
          "name": "Label",
          "declaration": {
            "name": "default",
            "module": "./label/React"
          }
        },
        {
          "kind": "js",
          "name": "Checkbox",
          "declaration": {
            "name": "default",
            "module": "./checkbox/React"
          }
        },
        {
          "kind": "js",
          "name": "Toast",
          "declaration": {
            "name": "default",
            "module": "./toast/React"
          }
        },
        {
          "kind": "js",
          "name": "MessageStrip",
          "declaration": {
            "name": "default",
            "module": "./message-strip/React"
          }
        },
        {
          "kind": "js",
          "name": "Form",
          "declaration": {
            "name": "default",
            "module": "./form/FormReact"
          }
        },
        {
          "kind": "js",
          "name": "FormItem",
          "declaration": {
            "name": "default",
            "module": "./form/FormItemReact"
          }
        },
        {
          "kind": "js",
          "name": "Link",
          "declaration": {
            "name": "default",
            "module": "./link/React"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/storybook-types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/button/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Button",
          "members": [],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "Defines whether the component is disabled.\nA disabled component can't be pressed or\nfocused, and it is not in the tab chain.",
              "fieldName": "disabled"
            },
            {
              "name": "icon",
              "type": {
                "text": "string"
              },
              "description": "Defines the icon, displayed as graphical element within the component.",
              "fieldName": "icon"
            },
            {
              "name": "type",
              "type": {
                "text": "ButtonDesign"
              },
              "fieldName": "type"
            },
            {
              "name": "htmlType",
              "description": "Defines whether the button has special form-related functionality.",
              "type": {
                "text": "ButtonType"
              },
              "fieldName": "htmlType"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "stylospectrum-button",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "stylospectrum-button",
          "declaration": {
            "name": "Button",
            "module": "src/button/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Button",
            "module": "src/button/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/checkbox/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Checkbox",
          "members": [],
          "events": [
            {
              "name": "change",
              "type": {
                "text": "EventEmitter<boolean>"
              },
              "description": "Fired when the component checked state changes.",
              "fieldName": "change"
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "Defines whether the component is disabled.",
              "fieldName": "disabled"
            },
            {
              "name": "indeterminate",
              "type": {
                "text": "boolean"
              },
              "description": "Defines whether the component is displayed as partially checked.\n<br><br>\n<b>Note:</b> The indeterminate state can be set only programmatically and canâ€™t be achieved by user\ninteraction and the resulting visual state depends on the values of the <code>indeterminate</code>\nand <code>checked</code> properties:\n<ul>\n<li> If the component is checked and indeterminate, it will be displayed as partially checked </li>\n<li> If the component is checked and it is not indeterminate, it will be displayed as checked </li>\n<li> If the component is not checked, it will be displayed as not checked regardless value of the indeterminate attribute</li>\n</ul>",
              "fieldName": "indeterminate"
            },
            {
              "name": "checked",
              "type": {
                "text": "boolean"
              },
              "description": "Defines if the component is checked.\n<br><br>\n<b>Note:</b> The property can be changed with user interaction,\neither by cliking/tapping on the component, or by\npressing the Enter or Space key.",
              "fieldName": "checked"
            },
            {
              "name": "text",
              "type": {
                "text": "string"
              },
              "description": "Defines the text of the component.",
              "fieldName": "text"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "stylospectrum-checkbox",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "stylospectrum-checkbox",
          "declaration": {
            "name": "Checkbox",
            "module": "src/checkbox/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Checkbox",
            "module": "src/checkbox/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/form/FormItemReact.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/form/FormItemReact.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/form/FormReact.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "src/form/FormReact.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/form/form-item.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FormItem",
          "members": [],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "fieldName": "label"
            },
            {
              "name": "rules",
              "type": {
                "text": "Array<Rule>"
              },
              "default": "[]",
              "fieldName": "rules"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "stylospectrum-form-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "stylospectrum-form-item",
          "declaration": {
            "name": "FormItem",
            "module": "src/form/form-item.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "FormItem",
            "module": "src/form/form-item.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/form/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Form",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "stylospectrum-form",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "stylospectrum-form",
          "declaration": {
            "name": "Form",
            "module": "src/form/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Form",
            "module": "src/form/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/icon/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Icon",
          "members": [],
          "attributes": [
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "fieldName": "name"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "stylospectrum-icon",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "stylospectrum-icon",
          "declaration": {
            "name": "Icon",
            "module": "src/icon/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Icon",
            "module": "src/icon/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/icon/util.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "registerIcon",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "IconData"
              }
            }
          ],
          "members": []
        },
        {
          "kind": "function",
          "name": "getIconData",
          "parameters": [
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            }
          ],
          "members": []
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "registerIcon",
          "declaration": {
            "name": "registerIcon",
            "module": "src/icon/util.ts"
          }
        },
        {
          "kind": "js",
          "name": "getIconData",
          "declaration": {
            "name": "getIconData",
            "module": "src/icon/util.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/input/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Input",
          "members": [],
          "events": [
            {
              "name": "change",
              "type": {
                "text": "EventEmitter<string>"
              },
              "description": "Fired when the value of the component changes at each keystroke.",
              "fieldName": "change"
            },
            {
              "name": "enter",
              "type": {
                "text": "EventEmitter<string>"
              },
              "fieldName": "enter"
            }
          ],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "Defines whether the component is in disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "''",
              "description": "Defines a short hint intended to aid the user with data entry when the\ncomponent has no value.",
              "fieldName": "placeholder"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "Defines the value of the component.",
              "fieldName": "value"
            },
            {
              "name": "valueState",
              "description": "Defines the value state of the component.",
              "type": {
                "text": "ValueState"
              },
              "fieldName": "valueState"
            },
            {
              "name": "valueStateMessage",
              "type": {
                "text": "string"
              },
              "description": "Defines the value state message that will be displayed as pop up under the component.",
              "fieldName": "valueStateMessage"
            },
            {
              "name": "allowClear",
              "type": {
                "text": "boolean"
              },
              "description": "If allow to remove input content with clear icon.",
              "fieldName": "allowClear"
            },
            {
              "name": "type",
              "description": "Defines the HTML type of the component.",
              "type": {
                "text": "InputType"
              },
              "fieldName": "type"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "stylospectrum-input",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "stylospectrum-input",
          "declaration": {
            "name": "Input",
            "module": "src/input/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Input",
            "module": "src/input/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/label/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Label",
          "members": [],
          "attributes": [
            {
              "name": "for",
              "type": {
                "text": "string"
              },
              "description": "Defines the labeled input by providing its ID.",
              "fieldName": "for"
            },
            {
              "name": "showColon",
              "type": {
                "text": "boolean"
              },
              "description": "Defines whether colon is added to the component text.",
              "fieldName": "showColon"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "description": "Defines whether an asterisk character is added to the component text.\n<br><br>\n<b>Note:</b> Usually indicates that user input (bound with the <code>for</code> property) is required.\nIn that case the <code>required</> property of\nthe corresponding input should also be set.",
              "fieldName": "required"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "stylospectrum-label",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "stylospectrum-label",
          "declaration": {
            "name": "Label",
            "module": "src/label/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Label",
            "module": "src/label/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/link/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Link",
          "members": [],
          "attributes": [
            {
              "name": "disabled",
              "type": {
                "text": "boolean"
              },
              "description": "Defines whether the component is disabled.\n<br><br>\n<b>Note:</b> When disabled, the click event cannot be triggered by the user.",
              "fieldName": "disabled"
            },
            {
              "name": "href",
              "type": {
                "text": "string"
              },
              "description": "Defines the component href.",
              "fieldName": "href"
            },
            {
              "name": "target",
              "type": {
                "text": "string"
              },
              "description": "Defines the component target.\n<br><br>\n<b>Notes:</b>\n<b>This property must only be used when the <code>href</code> property is set.</b>",
              "fieldName": "target"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "stylospectrum-link",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "stylospectrum-link",
          "declaration": {
            "name": "Link",
            "module": "src/link/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Link",
            "module": "src/link/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/message-strip/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MessageStrip",
          "members": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "stylospectrum-message-strip",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "stylospectrum-message-strip",
          "declaration": {
            "name": "MessageStrip",
            "module": "src/message-strip/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "MessageStrip",
            "module": "src/message-strip/index.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/toast/index.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Toast",
          "members": [],
          "attributes": [],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "stylospectrum-toast",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "stylospectrum-toast",
          "declaration": {
            "name": "Toast",
            "module": "src/toast/index.ts"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "Toast",
            "module": "src/toast/index.ts"
          }
        }
      ]
    }
  ]
}
