{"version":3,"file":"dialog-stories.d59d94c6.iframe.bundle.js","mappings":";;AAiBA;AACA;;;;AAaA;;AAGA;;AAGA;AAEA;;;AAKA;AACA;;;;;;;AAOA;;;;;;;AAOA;;AAEA;;;;;;;;;;AAUA;;;AAIA;;;;;;;;;;;;AC3DA;;;;;;;;;;;;;;;;;;;;;;AAsBA;;;;AAWA","sources":["webpack://@stylospectrum/ui/./src/dialog/index.ts","webpack://@stylospectrum/ui/./src/dialog/stories.ts"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css, unsafeCSS, nothing } from 'lit';\nimport { customElement, property, queryAssignedElements, state, } from 'lit/decorators.js';\nimport { event } from '../utils';\nimport styles from './style/index.scss';\nimport '../icon';\nlet Dialog = class Dialog extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.opened = false;\n    }\n    static { this.styles = css `\n    ${unsafeCSS(styles)}\n  `; }\n    _handleMaskClick(e) {\n        e.preventDefault();\n        this.maskClickEvent.emit();\n    }\n    render() {\n        const footerNode = this.hideFooter\n            ? nothing\n            : html `<footer part=\"footer\" class=\"stylospectrum-dialog-footer\">\n          <div class=\"stylospectrum-dialog-footer-space\"></div>\n          <slot name=\"ok-button\"></slot>\n          <slot name=\"cancel-button\"></slot>\n        </footer>`;\n        const headerIconNode = this.headerIcon\n            ? html `<stylospectrum-icon\n          class=\"stylospectrum-dialog-header-icon\"\n          name=${this.headerIcon}\n        >\n        </stylospectrum-icon>`\n            : nothing;\n        return html `\n      ${this.hideMask\n            ? nothing\n            : html `<div\n            class=\"stylospectrum-dialog-block-layer\"\n            tabindex=\"0\"\n            @keydown=${this._handleMaskClick}\n            @mousedown=${this._handleMaskClick}\n          ></div>`}\n\n      <div part=\"wrap\" class=\"stylospectrum-dialog-wrap\">\n        <slot name=\"second-dialog\"></slot>\n\n        <section\n          style=${this.style.cssText}\n          class=\"stylospectrum-dialog\"\n          role=\"dialog\"\n          aria-modal=\"true\"\n        >\n          <header class=\"stylospectrum-dialog-header\" part=\"header\">\n            <div class=\"stylospectrum-dialog-header-text-wrapper\">\n              ${headerIconNode}\n              <h1 class=\"stylospectrum-dialog-header-text\">\n                ${this.headerText}\n              </h1>\n            </div>\n            <slot name=\"sub-header\"></slot>\n          </header>\n\n          <div class=\"stylospectrum-dialog-content\" part=\"content\">\n            <slot></slot>\n          </div>\n\n          ${footerNode}\n        </section>\n      </div>\n    `;\n    }\n};\n__decorate([\n    property({ type: String, attribute: 'header-text' })\n], Dialog.prototype, \"headerText\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'hide-footer' })\n], Dialog.prototype, \"hideFooter\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'hide-mask' })\n], Dialog.prototype, \"hideMask\", void 0);\n__decorate([\n    property({ type: String, attribute: 'header-icon' })\n], Dialog.prototype, \"headerIcon\", void 0);\n__decorate([\n    event({ name: 'mask-click' })\n], Dialog.prototype, \"maskClickEvent\", void 0);\n__decorate([\n    state()\n], Dialog.prototype, \"opened\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'ok-button' })\n], Dialog.prototype, \"okButtonNodes\", void 0);\nDialog = __decorate([\n    customElement('stylospectrum-dialog')\n], Dialog);\nexport default Dialog;\n","import { html, render } from 'lit';\nimport '.';\nimport '../input';\nconst Template = () => {\n    return html `\n    <style>\n      .first-dialog::part(wrap) {\n        top: 0.375rem;\n        right: 1rem;\n      }\n\n      .second-dialog::part(wrap) {\n        right: 22rem;\n      }\n    </style>\n    <stylospectrum-button\n      @click=${() => render(html `<stylospectrum-dialog header-text=\"Header\" class=\"first-dialog\">\n            Content\n\n            <stylospectrum-dialog\n              header-text=\"Header\"\n              hide-footer\n              slot=\"second-dialog\"\n              class=\"second-dialog\"\n              hide-mask\n            >\n              Content\n            </stylospectrum-dialog>\n\n            <stylospectrum-input\n              slot=\"sub-header\"\n              style=\"width:100%\"\n            ></stylospectrum-input>\n\n            <stylospectrum-button slot=\"ok-button\"> Save </stylospectrum-button>\n            <stylospectrum-button slot=\"cancel-button\" type=\"Tertiary\">\n              Close\n            </stylospectrum-button>\n          </stylospectrum-dialog>`, document.body)}\n    >\n      Open Dialog\n    </stylospectrum-button>\n  `;\n};\nexport default {\n    title: 'Dialog',\n    component: 'stylospectrum-dialog',\n    tags: ['autodocs'],\n};\nexport const Basic = Template.bind({});\nBasic.args = {};\n"],"names":[],"sourceRoot":""}