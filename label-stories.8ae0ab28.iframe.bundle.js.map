{"version":3,"file":"label-stories.8ae0ab28.iframe.bundle.js","mappings":";;AAeA;AACA;AAcA;;;;;;;AAOA;;;;AAKA;;ACrCA;AACA;;;;AAWA","sources":["webpack://@stylospectrum/ui/./src/label/index.ts","webpack://@stylospectrum/ui/./src/label/stories.ts"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css, unsafeCSS } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport styles from './style/index.scss';\nlet Label = class Label extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._colonSymbol = ':';\n    }\n    static { this.styles = css `\n    ${unsafeCSS(styles)}\n  `; }\n    _handleClick() {\n        if (!this.for) {\n            return;\n        }\n        const slotNode = this.getRootNode().querySelector('slot');\n        const assignedElements = slotNode.assignedElements({ flatten: true });\n        const inputNode = assignedElements?.[0]?.shadowRoot?.querySelector('input');\n        if (inputNode) {\n            inputNode.focus();\n        }\n    }\n    render() {\n        return html `\n      <label class=\"stylospectrum-label-wrapper\" @click=\"${this._handleClick}\">\n        <span class=\"stylospectrum-label-text\">\n          <slot></slot>\n        </span>\n        <span\n          aria-hidden=\"true\"\n          class=\"stylospectrum-label-required-colon\"\n          data-colon=\"${this._colonSymbol}\"\n        >\n        </span>\n      </label>\n    `;\n    }\n};\n__decorate([\n    property()\n], Label.prototype, \"for\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'show-colon' })\n], Label.prototype, \"showColon\", void 0);\n__decorate([\n    property({ type: Boolean })\n], Label.prototype, \"required\", void 0);\nLabel = __decorate([\n    customElement('stylospectrum-label')\n], Label);\nexport default Label;\n","import { html } from 'lit';\nimport '.';\nconst Template = (args) => {\n    return html `\n    <stylospectrum-label\n      ?show-colon=\"${args.showColon}\"\n      ?required=\"${args.required}\"\n    >\n      Label\n    </stylospectrum-label>\n  `;\n};\nexport default {\n    title: 'Label',\n    component: 'stylospectrum-label',\n    tags: ['autodocs'],\n};\nexport const Basic = Template.bind({});\nBasic.args = {};\n"],"names":[],"sourceRoot":""}