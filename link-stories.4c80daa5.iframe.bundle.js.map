{"version":3,"file":"link-stories.4c80daa5.iframe.bundle.js","mappings":";;AAYA;AACA;;;AA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAKA;;ACnDA;AACA;AACA;AACA;;;;AAWA","sources":["webpack://@stylospectrum/ui/./src/link/index.ts","webpack://@stylospectrum/ui/./src/link/stories.ts"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css, unsafeCSS } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { ifDefined } from 'lit/directives/if-defined.js';\nimport styles from './style/index.scss';\nlet Link = class Link extends LitElement {\n    static { this.styles = css `\n    ${unsafeCSS(styles)}\n  `; }\n    constructor() {\n        super();\n        this._dummyAnchor = document.createElement('a');\n    }\n    _isCrossOrigin() {\n        const loc = window.location;\n        this._dummyAnchor.href = this.href;\n        return !(this._dummyAnchor.hostname === loc.hostname &&\n            this._dummyAnchor.port === loc.port &&\n            this._dummyAnchor.protocol === loc.protocol);\n    }\n    willUpdate() {\n        const needsNoReferrer = this.target !== '_self' && this.href && this._isCrossOrigin();\n        this._rel = needsNoReferrer ? 'noreferrer noopener' : undefined;\n    }\n    _handleFocusIn() {\n        this.focused = true;\n    }\n    _handleFocusOut() {\n        this.focused = false;\n    }\n    _handleClick(e) {\n        if (!this.href) {\n            e.preventDefault();\n        }\n    }\n    render() {\n        return html `\n      <a\n        class=\"stylospectrum-link\"\n        href=${this.href || '#'}\n        target=${ifDefined(this.target)}\n        rel=${ifDefined(this._rel)}\n        tabindex=${this.disabled ? '-1' : '0'}\n        title=\"${ifDefined(this.title || undefined)}\"\n        ?disabled=${this.disabled}\n        @click=${this._handleClick}\n        @focusin=${this._handleFocusIn}\n        @focusout=${this._handleFocusOut}\n      >\n        <slot></slot>\n      </a>\n    `;\n    }\n};\n__decorate([\n    property({ type: Boolean })\n], Link.prototype, \"disabled\", void 0);\n__decorate([\n    property()\n], Link.prototype, \"href\", void 0);\n__decorate([\n    property()\n], Link.prototype, \"target\", void 0);\n__decorate([\n    property({ type: Boolean, reflect: true })\n], Link.prototype, \"focused\", void 0);\n__decorate([\n    state()\n], Link.prototype, \"_rel\", void 0);\nLink = __decorate([\n    customElement('stylospectrum-link')\n], Link);\nexport default Link;\n","import { ifDefined } from 'lit/directives/if-defined.js';\nimport { html } from 'lit';\nimport '.';\nconst Template = (args) => {\n    return html `\n    <stylospectrum-link\n      href=${ifDefined(args.href)}\n      target=${ifDefined(args.target)}\n      ?disabled=${args.disabled}\n      @click=${() => console.log('clicked')}\n    >\n      Link\n    </stylospectrum-link>\n  `;\n};\nexport default {\n    title: 'Link',\n    component: 'stylospectrum-link',\n    tags: ['autodocs'],\n};\nexport const Basic = Template.bind({});\nBasic.args = {};\n"],"names":[],"sourceRoot":""}