{"version":3,"file":"menu-button-stories.ac8c60d6.iframe.bundle.js","mappings":";AAaA;AACA;;;;;;;;;;;;AAkBA;;;AAKA;;;;AAnBA;ACJA;AACA;;;;;AAOA;;;;;;;;;AASA;;;;;AAMA;;;;ACJA;;ACHA;AACA;AACA;AACA;AACA;;;;AAKA;AC1BA;AACA;;;;AAIA;;;AAGA;;;;;;;;;;;;;;;;AAgBA","sources":["webpack://@stylospectrum/ui/./src/icon/index.ts","webpack://@stylospectrum/ui/./src/menu-button/index.ts","webpack://@stylospectrum/ui/./src/menu/index.ts","webpack://@stylospectrum/ui/./src/menu/menu-item.ts","webpack://@stylospectrum/ui/./src/menu-button/stories.ts"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css, unsafeCSS } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport styles from './style/index.scss';\nimport { getIconData } from './util';\nlet Icon = class Icon extends LitElement {\n    static { this.styles = css `\n    ${unsafeCSS(styles)}\n  `; }\n    render() {\n        const iconData = getIconData(this.name);\n        if (!iconData) {\n            return html ``;\n        }\n        return html `\n      <i>\n        <svg\n          viewBox=\"0 0 512 512\"\n          width=\"1em\"\n          height=\"1em\"\n          role=\"presentation\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"currentColor\"\n          stroke=\"currentColor\"\n          part=\"root\"\n          aria-hidden=\"true\"\n          style=${styleMap({\n            transform: `rotate(${this.rotate}deg)`,\n        })}\n        >\n          <g role=\"presentation\">\n            <path d=\"${iconData.pathData}\" />\n          </g>\n        </svg>\n      </i>\n    `;\n    }\n};\n__decorate([\n    property({ type: String })\n], Icon.prototype, \"name\", void 0);\n__decorate([\n    property({ type: Number })\n], Icon.prototype, \"rotate\", void 0);\nIcon = __decorate([\n    customElement('stylospectrum-icon')\n], Icon);\nexport default Icon;\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css, unsafeCSS } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport styles from './style/index.scss';\nimport { event } from '../utils';\nimport '../button';\nimport '../icon/data/navigation-down-arrow';\nlet MenuButton = class MenuButton extends LitElement {\n    static { this.styles = css `\n    ${unsafeCSS(styles)}\n  `; }\n    render() {\n        return html `\n      <div class=\"stylospectrum-menu-button\">\n        <stylospectrum-button\n          type=\"Secondary\"\n          class=\"stylospectrum-menu-button-text\"\n          @click=${() => this.buttonClickEvent.emit()}\n        >\n          <slot></slot>\n        </stylospectrum-button>\n        <div class=\"stylospectrum-menu-button-arrow-wrapper\">\n          <stylospectrum-button\n            type=\"Secondary\"\n            class=\"stylospectrum-menu-button-arrow\"\n            icon=\"navigation-down-arrow\"\n            @click=${(e) => this.arrowClickEvent.emit(e.target)}\n          >\n          </stylospectrum-button>\n        </div>\n      </div>\n    `;\n    }\n};\n__decorate([\n    event({ name: 'arrow-click' })\n], MenuButton.prototype, \"arrowClickEvent\", void 0);\n__decorate([\n    event({ name: 'button-click' })\n], MenuButton.prototype, \"buttonClickEvent\", void 0);\nMenuButton = __decorate([\n    customElement('stylospectrum-menu-button')\n], MenuButton);\nexport default MenuButton;\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { customElement, query } from 'lit/decorators.js';\nimport { ContextProvider } from '@lit/context';\nimport { menuContext } from './context';\nimport '../popover';\nlet Menu = class Menu extends LitElement {\n    constructor() {\n        super(...arguments);\n        this._provider = new ContextProvider(this, { context: menuContext });\n    }\n    showAt(opener) {\n        this.popoverNode.showAt(opener);\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        this._provider.setValue({\n            hidePopover: () => {\n                this.popoverNode.hide();\n            },\n        });\n    }\n    render() {\n        return html `\n      <stylospectrum-popover hide-footer hide-arrow horizontal-align=\"Left\">\n        <slot></slot>\n      </stylospectrum-popover>\n    `;\n    }\n};\n__decorate([\n    query('stylospectrum-popover')\n], Menu.prototype, \"popoverNode\", void 0);\nMenu = __decorate([\n    customElement('stylospectrum-menu')\n], Menu);\nexport default Menu;\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { consume } from '@lit/context';\nimport { menuContext } from './context';\nimport '../list/list-item';\nlet MenuItem = class MenuItem extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.focused = false;\n    }\n    handleMouseEnter() {\n        this.focused = true;\n    }\n    handleMouseLeave() {\n        this.focused = false;\n    }\n    handleClick(e) {\n        e.stopPropagation();\n        this.click();\n        this._consumer?.hidePopover?.();\n    }\n    render() {\n        return html `\n      <stylospectrum-list-item\n        ?focused=${this.focused}\n        @mouseenter=${this.handleMouseEnter}\n        @mouseleave=${this.handleMouseLeave}\n        @click=${this.handleClick}\n        icon=${this.icon}\n      >\n        <slot></slot>\n      </stylospectrum-list-item>\n    `;\n    }\n};\n__decorate([\n    consume({ context: menuContext, subscribe: true })\n], MenuItem.prototype, \"_consumer\", void 0);\n__decorate([\n    property({ type: String })\n], MenuItem.prototype, \"icon\", void 0);\n__decorate([\n    state()\n], MenuItem.prototype, \"focused\", void 0);\nMenuItem = __decorate([\n    customElement('stylospectrum-menu-item')\n], MenuItem);\nexport default MenuItem;\n","import { html } from 'lit';\nimport { createRef, ref } from 'lit/directives/ref.js';\nimport '.';\nimport '../menu';\nimport '../menu/menu-item';\nimport '../icon/data/shield';\nimport '../icon/data/sales-order';\nimport '../icon/data/addresses';\nimport '../icon/data/credit-card';\nimport '../icon/data/customer';\nconst Template = () => {\n    const menuRef = createRef();\n    return html ` <stylospectrum-menu-button\n      @button-click=${() => console.log('button click')}\n      @arrow-click=${(e) => menuRef.value?.showAt(e.detail)}\n    >\n      default\n    </stylospectrum-menu-button>\n    <stylospectrum-menu ${ref(menuRef)}>\n      <stylospectrum-menu-item\n        icon=\"shield\"\n        @click=${() => console.log('Login & security click')}\n      >\n        Login & security\n      </stylospectrum-menu-item>\n      <stylospectrum-menu-item icon=\"sales-order\">\n        Your Orders\n      </stylospectrum-menu-item>\n      <stylospectrum-menu-item icon=\"addresses\">\n        Your Addresses\n      </stylospectrum-menu-item>\n      <stylospectrum-menu-item icon=\"credit-card\">\n        Your Payments\n      </stylospectrum-menu-item>\n      <stylospectrum-menu-item icon=\"customer\">\n        Your Profiles\n      </stylospectrum-menu-item>\n    </stylospectrum-menu>`;\n};\nexport default {\n    title: 'MenuButton',\n    component: 'stylospectrum-menu-button',\n    tags: ['autodocs'],\n};\nexport const Basic = Template.bind({});\nBasic.args = {};\n"],"names":[],"sourceRoot":""}