{"version":3,"file":"message-box-stories.fb5997a8.iframe.bundle.js","mappings":";;AAWA;AACA;;AAOA;;AAEA;AACA;AAEA;ACNA;AACA;AAGA;AAIA;;AAGA;;;;AAuBA;;AAGA;;AAGA;;;;;;AAOA;AACA;;;;;;;;;AASA;;AAGA;ACxDA;AACA;;;;;;;;;;;;AAkBA;;;AAKA;;;;AAnBA;ACdA;AACA;;AAWA;;;;;;;;;;AAWA;AC9BA;;;;AAIA;;;;;AAKA;;;;;;;AAOA;;;;;AAKA","sources":["webpack://@stylospectrum/ui/./src/dialog/BlockLayer.ts","webpack://@stylospectrum/ui/./src/dialog/index.ts","webpack://@stylospectrum/ui/./src/icon/index.ts","webpack://@stylospectrum/ui/./src/message-box/index.ts","webpack://@stylospectrum/ui/./src/message-box/stories.ts"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, css, html, unsafeCSS } from 'lit';\nimport { customElement } from 'lit/decorators.js';\nimport styles from './style/block-layer.scss';\nlet DialogBlockLayer = class DialogBlockLayer extends LitElement {\n    static { this.styles = css `\n    ${unsafeCSS(styles)}\n  `; }\n    _preventBlockLayerFocus(e) {\n        e.preventDefault();\n    }\n    render() {\n        return html `<div\n      class=\"stylospectrum-dialog-block-layer\"\n      ?hidden=${this.hidden}\n      tabindex=\"0\"\n      @keydown=${this._preventBlockLayerFocus}\n      @mousedown=${this._preventBlockLayerFocus}\n    ></div>`;\n    }\n};\nDialogBlockLayer = __decorate([\n    customElement('stylospectrum-dialog-block-layer')\n], DialogBlockLayer);\nexport default DialogBlockLayer;\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css, unsafeCSS, render, nothing } from 'lit';\nimport { customElement, property, queryAssignedElements, state, } from 'lit/decorators.js';\nimport styles from './style/index.scss';\nimport './BlockLayer';\nimport '../icon';\nimport { event } from '../utils';\nlet Dialog = class Dialog extends LitElement {\n    constructor() {\n        super(...arguments);\n        this.opened = false;\n    }\n    static { this.styles = css `\n    ${unsafeCSS(styles)}\n  `; }\n    blockLayerTemplate(hidden = false) {\n        return html `<stylospectrum-dialog-block-layer\n      @click=${() => {\n            this.maskClickEvent.emit();\n            this.hide();\n        }}\n      ?hidden=${hidden}\n    >\n    </stylospectrum-dialog-block-layer>`;\n    }\n    show() {\n        render(this.blockLayerTemplate(), document.body);\n        this.opened = true;\n        this.style.display = 'flex';\n        this.okButtonNodes?.[0]?.shadowRoot?.querySelector('button')?.focus();\n    }\n    hide() {\n        if (!this.opened) {\n            return;\n        }\n        render(this.blockLayerTemplate(true), document.body);\n        this.opened = false;\n        this.style.display = 'none';\n    }\n    render() {\n        const footerNode = this.hideFooter\n            ? nothing\n            : html `<footer part=\"footer\" class=\"stylospectrum-dialog-footer\">\n          <div class=\"stylospectrum-dialog-footer-space\"></div>\n          <slot name=\"ok-button\"></slot>\n          <slot name=\"cancel-button\"></slot>\n        </footer>`;\n        const headerIconNode = this.headerIcon\n            ? html `<stylospectrum-icon\n          class=\"stylospectrum-dialog-header-icon\"\n          name=${this.headerIcon}\n        >\n        </stylospectrum-icon>`\n            : nothing;\n        return html `\n      <slot name=\"second-dialog\"></slot>\n\n      <section class=\"stylospectrum-dialog\" role=\"dialog\" aria-modal=\"true\">\n        <header class=\"stylospectrum-dialog-header\" part=\"header\">\n          <div class=\"stylospectrum-dialog-header-text-wrapper\">\n            ${headerIconNode}\n            <h1 class=\"stylospectrum-dialog-header-text\">${this.headerText}</h1>\n          </div>\n          <slot name=\"sub-header\"></slot>\n        </header>\n\n        <div class=\"stylospectrum-dialog-content\" part=\"content\">\n          <slot></slot>\n        </div>\n\n        ${footerNode}\n      </section>\n    `;\n    }\n};\n__decorate([\n    property({ type: String, attribute: 'header-text' })\n], Dialog.prototype, \"headerText\", void 0);\n__decorate([\n    property({ type: Boolean, attribute: 'hide-footer' })\n], Dialog.prototype, \"hideFooter\", void 0);\n__decorate([\n    property({ type: String, attribute: 'header-icon' })\n], Dialog.prototype, \"headerIcon\", void 0);\n__decorate([\n    event({ name: 'mask-click' })\n], Dialog.prototype, \"maskClickEvent\", void 0);\n__decorate([\n    state()\n], Dialog.prototype, \"opened\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'ok-button' })\n], Dialog.prototype, \"okButtonNodes\", void 0);\nDialog = __decorate([\n    customElement('stylospectrum-dialog')\n], Dialog);\nexport default Dialog;\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css, unsafeCSS } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { styleMap } from 'lit/directives/style-map.js';\nimport styles from './style/index.scss';\nimport { getIconData } from './util';\nlet Icon = class Icon extends LitElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * @type {number}\n         * @defaultValue 0\n         * @public\n         */\n        this.rotate = 0;\n    }\n    static { this.styles = css `\n    ${unsafeCSS(styles)}\n  `; }\n    render() {\n        const iconData = getIconData(this.name);\n        if (!iconData) {\n            return html ``;\n        }\n        return html `\n      <i>\n        <svg\n          viewBox=\"0 0 512 512\"\n          width=\"1em\"\n          height=\"1em\"\n          role=\"presentation\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"currentColor\"\n          stroke=\"currentColor\"\n          part=\"root\"\n          aria-hidden=\"true\"\n          style=${styleMap({\n            transform: `rotate(${this.rotate}deg)`,\n        })}\n        >\n          <g role=\"presentation\">\n            <path d=\"${iconData.pathData}\" />\n          </g>\n        </svg>\n      </i>\n    `;\n    }\n};\n__decorate([\n    property({ type: String })\n], Icon.prototype, \"name\", void 0);\n__decorate([\n    property({ type: Number })\n], Icon.prototype, \"rotate\", void 0);\nIcon = __decorate([\n    customElement('stylospectrum-icon')\n], Icon);\nexport default Icon;\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { LitElement, html, css, unsafeCSS } from 'lit';\nimport { customElement, property, query, queryAssignedElements, } from 'lit/decorators.js';\nimport styles from './style/index.scss';\nimport '../dialog';\nimport '../icon/data/incident';\nlet MessageBox = class MessageBox extends LitElement {\n    static { this.styles = css `\n    ${unsafeCSS(styles)}\n  `; }\n    show() {\n        this.dialogNode.show();\n        this.okButtonNodes?.[0]?.shadowRoot?.querySelector('button')?.focus();\n    }\n    hide() {\n        this.dialogNode.hide();\n    }\n    render() {\n        return html `\n      <stylospectrum-dialog\n        header-text=${this.headerText}\n        header-icon=\"incident\"\n        class=\"stylospectrum-message-box\"\n      >\n        <div class=\"stylospectrum-message-box-content\">\n          <slot></slot>\n        </div>\n        <slot name=\"ok-button\" slot=\"ok-button\"></slot>\n        <slot name=\"cancel-button\" slot=\"cancel-button\"></slot>\n      </stylospectrum-dialog>\n    `;\n    }\n};\n__decorate([\n    property({ type: String, attribute: 'header-text' })\n], MessageBox.prototype, \"headerText\", void 0);\n__decorate([\n    query('stylospectrum-dialog')\n], MessageBox.prototype, \"dialogNode\", void 0);\n__decorate([\n    queryAssignedElements({ slot: 'ok-button' })\n], MessageBox.prototype, \"okButtonNodes\", void 0);\nMessageBox = __decorate([\n    customElement('stylospectrum-message-box')\n], MessageBox);\nexport default MessageBox;\n","import { createRef, ref } from 'lit/directives/ref.js';\nimport { html } from 'lit';\nimport '.';\nconst Template = () => {\n    const messageBoxRef = createRef();\n    return html `\n    <stylospectrum-button @click=${() => messageBoxRef.value?.show()}>\n      Open Popover\n    </stylospectrum-button>\n\n    <stylospectrum-message-box header-text=\"Delete block\" ${ref(messageBoxRef)}>\n      Are you sure you want to delete selected entity?\n\n      <stylospectrum-button\n        slot=\"ok-button\"\n        @click=${() => messageBoxRef.value?.hide()}\n      >\n        Confirm\n      </stylospectrum-button>\n      <stylospectrum-button\n        slot=\"cancel-button\"\n        type=\"Tertiary\"\n        @click=${() => messageBoxRef.value?.hide()}\n      >\n        Cancel\n      </stylospectrum-button>\n    </stylospectrum-message-box>\n  `;\n};\nexport default {\n    title: 'MessageBox',\n    component: 'stylospectrum-message-box',\n    tags: ['autodocs'],\n};\nexport const Basic = Template.bind({});\nBasic.args = {};\n"],"names":[],"sourceRoot":""}